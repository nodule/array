{
  "name": "array",
  "description": "Array nodes for ChiÏ‡",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/nodule/array.git"
  },
  "nodes": [
    {
      "ports": {
        "input": {
          "in": {
            "title": "Array",
            "type": "array"
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "array"
          }
        }
      },
      "phrases": {
        "active": "Creating array"
      },
      "description": "Creates an array.",
      "ns": "array",
      "name": "create",
      "fn": "output.out = input.in.slice();\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Value",
            "type": "any",
            "async": true
          },
          "length": {
            "title": "Length",
            "type": "number"
          },
          "array": {
            "title": "Array",
            "type": "array",
            "default": null
          }
        },
        "output": {
          "out": {
            "title": "Array",
            "type": "array"
          },
          "length": {
            "title": "New Length",
            "type": "number"
          }
        }
      },
      "phrases": {
        "active": "Filling array"
      },
      "description": "Fills an array to the length specified and outputs it.",
      "async": true,
      "ns": "array",
      "name": "fill",
      "fn": "on.input.in = function() {\n\n  if(!state.arr) state.arr = input.array || [];\n\n  state.arr.push(data);\n\n  if(state.arr.length === input.length) {\n    output({ out: state.arr });\n    state.arr = input.array || [];\n  }\n\n};\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Array",
            "type": "array",
            "async": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "group": "result",
            "type": "any"
          },
          "xout": {
            "title": "Xout",
            "type": "array"
          }
        }
      },
      "expose": [
        "chi"
      ],
      "phrases": {
        "active": "Grouping array"
      },
      "description": "Takes an array and turns it into group. Items are spit out one by one.",
      "async": true,
      "ns": "array",
      "name": "group",
      "fn": "on.input.in = function () {\n\n  var i;\n\n  // TODO: second parameter is a bit weird.\n  var g = chi.group('xout', output);\n  for(i = 0; i < data.length; i++) {\n    output({ out: data[i] }, g.item());\n  }\n\n  g.done();\n\n};\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Array",
            "type": "array"
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "array"
          }
        }
      },
      "phrases": {
        "active": "Creating array"
      },
      "description": "Creates an array.",
      "ns": "array",
      "name": "create",
      "fn": "output.out = input.in.slice();\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Array",
            "type": "array"
          }
        },
        "output": {
          "yes": {
            "title": "Yes",
            "type": "array"
          },
          "no": {
            "title": "No",
            "type": "array"
          }
        }
      },
      "phrases": {
        "active": "Determining whether the array is empty"
      },
      "description": "Checks whether the array is empty.",
      "ns": "array",
      "name": "isEmpty",
      "fn": "on.input.in = function() {\n\n  if(data.length > 0) {\n    output( { yes: data } );\n  } else {\n    output( { no: data } );\n  }\n\n};\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Array",
            "type": "array"
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "array"
          }
        }
      },
      "phrases": {
        "active": "Determining length"
      },
      "description": "Outputs the length of an array.",
      "ns": "array",
      "name": "length",
      "fn": "on.input.in = function() {\n  output( { out: data.length } );\n};\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Array",
            "type": "array"
          },
          "value": {
            "title": "Value",
            "type": "any"
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "array"
          },
          "length": {
            "title": "New Length",
            "type": "number"
          }
        }
      },
      "phrases": {
        "active": "Creating array"
      },
      "description": "Append value to an array.",
      "ns": "array",
      "name": "push",
      "fn": "output.length = input.in.push(input.value);\noutput.out    = input.in;\n"
    }
  ],
  "twigs": []
}